version: '2'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: vguit.enose.zookeeper
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./kafka/:/bitnami/kafka
    container_name: vguit.enose.kafka
  redis:
    image: 'redis:latest'
    ports: 
      - '6379:6379'
    volumes:
      - ./redis/:/data
    container_name: vguit.enose.redis
  enose:
    build: ./elastic-server/
    ports:
      - '7070:7070'
    volumes: 
      - ./elastic-server/resources/elastic-server/config.json:/app/config.json
    container_name: vguit.enose
    depends_on:
      - node
      - kafka
  ts_server:
    image: 'tensorflow/serving:latest'
    container_name: vguit.enose.ts.serving
    command: --model_config_file=/models/models.config
    ports: 
      - 8500:8500
      - 8501:8501
    volumes: 
      - ./models:/models
  node:
    image: "node:8-alpine"
    ports: 
      - 8080:8080
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    volumes:
      - ./ts-models:/home/node/app
      - ./models:/home/node/models
    expose:
      - "8080"
    command: "npm start"

      